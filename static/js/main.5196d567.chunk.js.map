{"version":3,"sources":["logo.svg","image/11.png","login/login.js","Page/page1.js","Page/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","Form","Item","inpVal","this","input","state","value","props","onLoginCallback","console","log","defaultValue","ref","size","prefix","type","style","color","placeholder","htmlType","className","onClick","search","bind","React","Component","WrapForm","create","Title","Typography","Paragraph","Text","Page1","margin","strong","level","code","href","mark","Main","visible","handleCancel","e","setState","onCardCallback","display","flex","footer","centered","maskClosable","onCancel","bodyStyle","padding","alt","width","src","image","marginLeft","fontFamily","App","flag","cardFlag","logo","LoginCallback","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5196d567.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/11.0fe67583.png\";","import React from 'react';\r\nimport Button from 'antd/es/button';\r\nimport {message,Form, Icon, Input,Alert} from 'antd';\r\nimport 'antd/dist/antd.css';  // or 'antd/dist/antd.less'\r\nconst FormItem = Form.Item;\r\nclass Login extends React.Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n    search(){\r\n        const inpVal = this.input.state.value;\r\n        if(inpVal ==='1'){\r\n            // alert(\"生日快乐\")\r\n            this.props.onLoginCallback(true);\r\n        }\r\n        console.log(inpVal);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            <Input defaultValue='' ref={input => this.input = input} size=\"large\"  prefix={<Icon type=\"user\"  style={{ color: 'rgba(0,0,0,.5)' }}  />} placeholder=\"请输入用户名\"  />\r\n            <Button size=\"large\"  type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"  onClick={this.search.bind(this)}> 登陆</Button>\r\n            </div>\r\n            );\r\n    }\r\n  }\r\n\r\n  let WrapForm = Form.create()(Login)\r\n  export default WrapForm","import { Typography, Divider } from 'antd';\r\nimport React from 'react';\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nclass Page1 extends React.Component {\r\n    render() {\r\n      return (\r\n    <div style={{margin:10}}>\r\n <Typography>\r\n    <Title>Introduction</Title>\r\n    <Paragraph>\r\n      In the process of internal desktop applications development, many different design specs and\r\n      implementations would be involved, which might cause designers and developers difficulties and\r\n      duplication and reduce the efficiency of development.\r\n    </Paragraph>\r\n    <Paragraph>\r\n      After massive project practice and summaries, Ant Design, a design language for background\r\n      applications, is refined by Ant UED Team, which aims to \r\n      <Text strong>\r\n        uniform the user interface specs for internal background projects, lower the unnecessary\r\n        cost of design differences and implementation and liberate the resources of design and\r\n        front-end development\r\n      </Text>\r\n      .\r\n    </Paragraph>\r\n    <Title level={2}>Guidelines and Resources</Title>\r\n    <Paragraph>\r\n      We supply a series of design principles, practical patterns and high quality design resources\r\n      (<Text code>Sketch</Text> and <Text code>Axure</Text>), to help people create their product\r\n      prototypes beautifully and efficiently.\r\n    </Paragraph>\r\n\r\n    <Paragraph>\r\n      <ul>\r\n        <li>\r\n          <a href=\"/docs/spec/proximity\">Principles</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/docs/pattern/navigation\">Patterns</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/docs/resource/download\">Resource Download</a>\r\n        </li>\r\n      </ul>\r\n    </Paragraph>\r\n\r\n    <Divider />\r\n\r\n    <Title>介绍</Title>\r\n    <Paragraph>\r\n      蚂蚁的企业级产品是一个庞大且复杂的体系。这类产品不仅量级巨大且功能复杂，而且变动和并发频繁，常常需要设计与开发能够快速的做出响应。同时这类产品中有存在很多类似的页面以及组件，可以通过抽象得到一些稳定且高复用性的内容。\r\n    </Paragraph>\r\n    <Paragraph>\r\n      随着商业化的趋势，越来越多的企业级产品对更好的用户体验有了进一步的要求。带着这样的一个终极目标，我们（蚂蚁金服体验技术部）经过大量的项目实践和总结，逐步打磨出一个服务于企业级产品的设计体系\r\n      Ant Design。基于<Text mark>『确定』和『自然』</Text>\r\n      的设计价值观，通过模块化的解决方案，降低冗余的生产成本，让设计者专注于\r\n      <Text strong>更好的用户体验</Text>。\r\n    </Paragraph>\r\n    <Title level={2}>设计资源</Title>\r\n    <Paragraph>\r\n      我们提供完善的设计原则、最佳实践和设计资源文件（<Text code>Sketch</Text> 和\r\n      <Text code>Axure</Text>），来帮助业务快速设计出高质量的产品原型。\r\n    </Paragraph>\r\n\r\n    <Paragraph>\r\n      <ul>\r\n        <li>\r\n          <a href=\"/docs/spec/proximity\">设计原则</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/docs/pattern/navigation\">设计模式</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/docs/resource/download\">设计资源</a>\r\n        </li>\r\n      </ul>\r\n    </Paragraph>\r\n  </Typography>\r\n   \r\n    </div>     \r\n  );\r\n      }\r\n    }\r\n\r\nexport default Page1;","import React from 'react';\r\nimport image from '../image/11.png';\r\nimport {Modal,Button,Row,Col,Card} from 'antd';\r\nimport Page1 from './page1';\r\nclass Main extends React.Component {\r\n    state = { visible: true };\r\n\r\n  \r\n    handleCancel = e => {\r\n      console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n      this.props.onCardCallback(true);\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n        <div style={{display:'flex',flex:1}}>\r\n                <Modal\r\n                footer={false}\r\n                centered={true}\r\n                maskClosable={true}\r\n                visible={this.state.visible}\r\n                onCancel={this.handleCancel}\r\n            >\r\n                  <Card style={{display:'flex', flex:1}} bodyStyle={{ padding: 0 }}>\r\n                            <div className=\"custom-image\">\r\n                            <img alt=\"example\" width=\"100%\" src={image} />\r\n                            </div>\r\n                            <div className=\"custom-card\">\r\n                            <h1 style={{color:'orange',marginLeft:'40%',fontFamily:'cursive'}}>生日快乐</h1>\r\n                            <h2 style={{color:'orange',marginLeft:'42%',fontFamily:'cursive'}}>(*^_^*)</h2>\r\n                            </div>\r\n                    </Card>\r\n            </Modal>\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport logo from './logo.svg';\n// import image from './image/11.jpg';\nimport './App.css';\nimport Login from './login/login';\n// import Page1 from './Page/page1';\nimport Main from './Page/main';\nimport Page1 from './Page/page1';\nclass App extends React.Component {\n  constructor(){\n      super();\n      this.state={\n        flag:false,\n        cardFlag:false\n      }\n  }\n  LoginCallback(e){\n      this.setState({\n        flag:true\n      })\n  }\n  onCardCallback(e){\n      this.setState({\n        cardFlag:e\n      })\n  }\n\n  render() {\n    if(!this.state.flag){\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <Login onLoginCallback={this.LoginCallback.bind(this)}></Login>\n          </header>\n        </div>\n      );\n    }else{\n      console.log('this.state.cardFlag'+this.state.cardFlag)\n      if(!this.state.cardFlag){\n        return (\n          <div style={{display:'flex',flex:1}}>\n            <Main onCardCallback={this.onCardCallback.bind(this)}></Main>\n          </div>\n        );\n      }else{\n        return (\n          <div style={{display:'flex',flex:1}}>\n            <Page1></Page1>\n          </div>\n        );\n      }\n\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}